#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLyLuongSanPham
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLLuongSP")]
	public partial class qlLuongSPDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblAccountCN(tblAccountCN instance);
    partial void UpdatetblAccountCN(tblAccountCN instance);
    partial void DeletetblAccountCN(tblAccountCN instance);
    partial void InserttblAccountNV(tblAccountNV instance);
    partial void UpdatetblAccountNV(tblAccountNV instance);
    partial void DeletetblAccountNV(tblAccountNV instance);
    partial void InserttblCongDoan(tblCongDoan instance);
    partial void UpdatetblCongDoan(tblCongDoan instance);
    partial void DeletetblCongDoan(tblCongDoan instance);
    partial void InserttblCongNhan(tblCongNhan instance);
    partial void UpdatetblCongNhan(tblCongNhan instance);
    partial void DeletetblCongNhan(tblCongNhan instance);
    partial void InserttblCongXuong(tblCongXuong instance);
    partial void UpdatetblCongXuong(tblCongXuong instance);
    partial void DeletetblCongXuong(tblCongXuong instance);
    partial void InserttblHopDong(tblHopDong instance);
    partial void UpdatetblHopDong(tblHopDong instance);
    partial void DeletetblHopDong(tblHopDong instance);
    partial void InserttblNhanVienHanhChinh(tblNhanVienHanhChinh instance);
    partial void UpdatetblNhanVienHanhChinh(tblNhanVienHanhChinh instance);
    partial void DeletetblNhanVienHanhChinh(tblNhanVienHanhChinh instance);
    partial void InserttblPhongBan(tblPhongBan instance);
    partial void UpdatetblPhongBan(tblPhongBan instance);
    partial void DeletetblPhongBan(tblPhongBan instance);
    partial void InserttblSanPham(tblSanPham instance);
    partial void UpdatetblSanPham(tblSanPham instance);
    partial void DeletetblSanPham(tblSanPham instance);
    partial void InserttblLuongNV(tblLuongNV instance);
    partial void UpdatetblLuongNV(tblLuongNV instance);
    partial void DeletetblLuongNV(tblLuongNV instance);
    partial void InserttblLuongCN(tblLuongCN instance);
    partial void UpdatetblLuongCN(tblLuongCN instance);
    partial void DeletetblLuongCN(tblLuongCN instance);
    #endregion
		
		public qlLuongSPDataContext() : 
				base(global::QuanLyLuongSanPham.Properties.Settings.Default.QLLuongSPConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public qlLuongSPDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public qlLuongSPDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public qlLuongSPDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public qlLuongSPDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblAccountCN> tblAccountCNs
		{
			get
			{
				return this.GetTable<tblAccountCN>();
			}
		}
		
		public System.Data.Linq.Table<tblAccountNV> tblAccountNVs
		{
			get
			{
				return this.GetTable<tblAccountNV>();
			}
		}
		
		public System.Data.Linq.Table<tblCongDoan> tblCongDoans
		{
			get
			{
				return this.GetTable<tblCongDoan>();
			}
		}
		
		public System.Data.Linq.Table<tblCongNhan> tblCongNhans
		{
			get
			{
				return this.GetTable<tblCongNhan>();
			}
		}
		
		public System.Data.Linq.Table<tblCongXuong> tblCongXuongs
		{
			get
			{
				return this.GetTable<tblCongXuong>();
			}
		}
		
		public System.Data.Linq.Table<tblHopDong> tblHopDongs
		{
			get
			{
				return this.GetTable<tblHopDong>();
			}
		}
		
		public System.Data.Linq.Table<tblNhanVienHanhChinh> tblNhanVienHanhChinhs
		{
			get
			{
				return this.GetTable<tblNhanVienHanhChinh>();
			}
		}
		
		public System.Data.Linq.Table<tblPhongBan> tblPhongBans
		{
			get
			{
				return this.GetTable<tblPhongBan>();
			}
		}
		
		public System.Data.Linq.Table<tblSanPham> tblSanPhams
		{
			get
			{
				return this.GetTable<tblSanPham>();
			}
		}
		
		public System.Data.Linq.Table<tblLuongNV> tblLuongNVs
		{
			get
			{
				return this.GetTable<tblLuongNV>();
			}
		}
		
		public System.Data.Linq.Table<tblLuongCN> tblLuongCNs
		{
			get
			{
				return this.GetTable<tblLuongCN>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAccountCN")]
	public partial class tblAccountCN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _STT;
		
		private string _IDCN;
		
		private string _PassCN;
		
		private EntityRef<tblCongNhan> _tblCongNhan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSTTChanging(string value);
    partial void OnSTTChanged();
    partial void OnIDCNChanging(string value);
    partial void OnIDCNChanged();
    partial void OnPassCNChanging(string value);
    partial void OnPassCNChanged();
    #endregion
		
		public tblAccountCN()
		{
			this._tblCongNhan = default(EntityRef<tblCongNhan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STT", DbType="NChar(2)")]
		public string STT
		{
			get
			{
				return this._STT;
			}
			set
			{
				if ((this._STT != value))
				{
					this.OnSTTChanging(value);
					this.SendPropertyChanging();
					this._STT = value;
					this.SendPropertyChanged("STT");
					this.OnSTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCN", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDCN
		{
			get
			{
				return this._IDCN;
			}
			set
			{
				if ((this._IDCN != value))
				{
					if (this._tblCongNhan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCNChanging(value);
					this.SendPropertyChanging();
					this._IDCN = value;
					this.SendPropertyChanged("IDCN");
					this.OnIDCNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassCN", DbType="NChar(8) NOT NULL", CanBeNull=false)]
		public string PassCN
		{
			get
			{
				return this._PassCN;
			}
			set
			{
				if ((this._PassCN != value))
				{
					this.OnPassCNChanging(value);
					this.SendPropertyChanging();
					this._PassCN = value;
					this.SendPropertyChanged("PassCN");
					this.OnPassCNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCongNhan_tblAccountCN", Storage="_tblCongNhan", ThisKey="IDCN", OtherKey="IDCN", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tblCongNhan tblCongNhan
		{
			get
			{
				return this._tblCongNhan.Entity;
			}
			set
			{
				tblCongNhan previousValue = this._tblCongNhan.Entity;
				if (((previousValue != value) 
							|| (this._tblCongNhan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCongNhan.Entity = null;
						previousValue.tblAccountCN = null;
					}
					this._tblCongNhan.Entity = value;
					if ((value != null))
					{
						value.tblAccountCN = this;
						this._IDCN = value.IDCN;
					}
					else
					{
						this._IDCN = default(string);
					}
					this.SendPropertyChanged("tblCongNhan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAccountNV")]
	public partial class tblAccountNV : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _STT;
		
		private string _IDNV;
		
		private string _PassNV;
		
		private EntityRef<tblNhanVienHanhChinh> _tblNhanVienHanhChinh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSTTChanging(string value);
    partial void OnSTTChanged();
    partial void OnIDNVChanging(string value);
    partial void OnIDNVChanged();
    partial void OnPassNVChanging(string value);
    partial void OnPassNVChanged();
    #endregion
		
		public tblAccountNV()
		{
			this._tblNhanVienHanhChinh = default(EntityRef<tblNhanVienHanhChinh>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STT", DbType="NChar(3)")]
		public string STT
		{
			get
			{
				return this._STT;
			}
			set
			{
				if ((this._STT != value))
				{
					this.OnSTTChanging(value);
					this.SendPropertyChanging();
					this._STT = value;
					this.SendPropertyChanged("STT");
					this.OnSTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNV", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDNV
		{
			get
			{
				return this._IDNV;
			}
			set
			{
				if ((this._IDNV != value))
				{
					if (this._tblNhanVienHanhChinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDNVChanging(value);
					this.SendPropertyChanging();
					this._IDNV = value;
					this.SendPropertyChanged("IDNV");
					this.OnIDNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassNV", DbType="NChar(8) NOT NULL", CanBeNull=false)]
		public string PassNV
		{
			get
			{
				return this._PassNV;
			}
			set
			{
				if ((this._PassNV != value))
				{
					this.OnPassNVChanging(value);
					this.SendPropertyChanging();
					this._PassNV = value;
					this.SendPropertyChanged("PassNV");
					this.OnPassNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblNhanVienHanhChinh_tblAccountNV", Storage="_tblNhanVienHanhChinh", ThisKey="IDNV", OtherKey="IDNV", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tblNhanVienHanhChinh tblNhanVienHanhChinh
		{
			get
			{
				return this._tblNhanVienHanhChinh.Entity;
			}
			set
			{
				tblNhanVienHanhChinh previousValue = this._tblNhanVienHanhChinh.Entity;
				if (((previousValue != value) 
							|| (this._tblNhanVienHanhChinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblNhanVienHanhChinh.Entity = null;
						previousValue.tblAccountNV = null;
					}
					this._tblNhanVienHanhChinh.Entity = value;
					if ((value != null))
					{
						value.tblAccountNV = this;
						this._IDNV = value.IDNV;
					}
					else
					{
						this._IDNV = default(string);
					}
					this.SendPropertyChanged("tblNhanVienHanhChinh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCongDoan")]
	public partial class tblCongDoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDCD;
		
		private int _LuongCD;
		
		private EntitySet<tblLuongCN> _tblLuongCNs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCDChanging(string value);
    partial void OnIDCDChanged();
    partial void OnLuongCDChanging(int value);
    partial void OnLuongCDChanged();
    #endregion
		
		public tblCongDoan()
		{
			this._tblLuongCNs = new EntitySet<tblLuongCN>(new Action<tblLuongCN>(this.attach_tblLuongCNs), new Action<tblLuongCN>(this.detach_tblLuongCNs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCD", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDCD
		{
			get
			{
				return this._IDCD;
			}
			set
			{
				if ((this._IDCD != value))
				{
					this.OnIDCDChanging(value);
					this.SendPropertyChanging();
					this._IDCD = value;
					this.SendPropertyChanged("IDCD");
					this.OnIDCDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LuongCD", DbType="Int NOT NULL")]
		public int LuongCD
		{
			get
			{
				return this._LuongCD;
			}
			set
			{
				if ((this._LuongCD != value))
				{
					this.OnLuongCDChanging(value);
					this.SendPropertyChanging();
					this._LuongCD = value;
					this.SendPropertyChanged("LuongCD");
					this.OnLuongCDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCongDoan_tblLuongCN", Storage="_tblLuongCNs", ThisKey="IDCD", OtherKey="IDCD")]
		public EntitySet<tblLuongCN> tblLuongCNs
		{
			get
			{
				return this._tblLuongCNs;
			}
			set
			{
				this._tblLuongCNs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblLuongCNs(tblLuongCN entity)
		{
			this.SendPropertyChanging();
			entity.tblCongDoan = this;
		}
		
		private void detach_tblLuongCNs(tblLuongCN entity)
		{
			this.SendPropertyChanging();
			entity.tblCongDoan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCongNhan")]
	public partial class tblCongNhan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDCN;
		
		private string _HoTen;
		
		private string _GioiTinh;
		
		private System.DateTime _NgaySinh;
		
		private System.DateTime _NgayBatDau;
		
		private string _TrangThai;
		
		private string _ChucVu;
		
		private int _PhuCap;
		
		private string _IDCX;
		
		private EntityRef<tblAccountCN> _tblAccountCN;
		
		private EntitySet<tblLuongCN> _tblLuongCNs;
		
		private EntityRef<tblCongXuong> _tblCongXuong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCNChanging(string value);
    partial void OnIDCNChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnNgaySinhChanging(System.DateTime value);
    partial void OnNgaySinhChanged();
    partial void OnNgayBatDauChanging(System.DateTime value);
    partial void OnNgayBatDauChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    partial void OnChucVuChanging(string value);
    partial void OnChucVuChanged();
    partial void OnPhuCapChanging(int value);
    partial void OnPhuCapChanged();
    partial void OnIDCXChanging(string value);
    partial void OnIDCXChanged();
    #endregion
		
		public tblCongNhan()
		{
			this._tblAccountCN = default(EntityRef<tblAccountCN>);
			this._tblLuongCNs = new EntitySet<tblLuongCN>(new Action<tblLuongCN>(this.attach_tblLuongCNs), new Action<tblLuongCN>(this.detach_tblLuongCNs));
			this._tblCongXuong = default(EntityRef<tblCongXuong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCN", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDCN
		{
			get
			{
				return this._IDCN;
			}
			set
			{
				if ((this._IDCN != value))
				{
					this.OnIDCNChanging(value);
					this.SendPropertyChanging();
					this._IDCN = value;
					this.SendPropertyChanged("IDCN");
					this.OnIDCNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NChar(30) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date NOT NULL")]
		public System.DateTime NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBatDau", DbType="Date NOT NULL")]
		public System.DateTime NgayBatDau
		{
			get
			{
				return this._NgayBatDau;
			}
			set
			{
				if ((this._NgayBatDau != value))
				{
					this.OnNgayBatDauChanging(value);
					this.SendPropertyChanging();
					this._NgayBatDau = value;
					this.SendPropertyChanged("NgayBatDau");
					this.OnNgayBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChucVu", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string ChucVu
		{
			get
			{
				return this._ChucVu;
			}
			set
			{
				if ((this._ChucVu != value))
				{
					this.OnChucVuChanging(value);
					this.SendPropertyChanging();
					this._ChucVu = value;
					this.SendPropertyChanged("ChucVu");
					this.OnChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhuCap", DbType="Int NOT NULL")]
		public int PhuCap
		{
			get
			{
				return this._PhuCap;
			}
			set
			{
				if ((this._PhuCap != value))
				{
					this.OnPhuCapChanging(value);
					this.SendPropertyChanging();
					this._PhuCap = value;
					this.SendPropertyChanged("PhuCap");
					this.OnPhuCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCX", DbType="NChar(5) NOT NULL", CanBeNull=false)]
		public string IDCX
		{
			get
			{
				return this._IDCX;
			}
			set
			{
				if ((this._IDCX != value))
				{
					if (this._tblCongXuong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCXChanging(value);
					this.SendPropertyChanging();
					this._IDCX = value;
					this.SendPropertyChanged("IDCX");
					this.OnIDCXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCongNhan_tblAccountCN", Storage="_tblAccountCN", ThisKey="IDCN", OtherKey="IDCN", IsUnique=true, IsForeignKey=false)]
		public tblAccountCN tblAccountCN
		{
			get
			{
				return this._tblAccountCN.Entity;
			}
			set
			{
				tblAccountCN previousValue = this._tblAccountCN.Entity;
				if (((previousValue != value) 
							|| (this._tblAccountCN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblAccountCN.Entity = null;
						previousValue.tblCongNhan = null;
					}
					this._tblAccountCN.Entity = value;
					if ((value != null))
					{
						value.tblCongNhan = this;
					}
					this.SendPropertyChanged("tblAccountCN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCongNhan_tblLuongCN", Storage="_tblLuongCNs", ThisKey="IDCN", OtherKey="IDCN")]
		public EntitySet<tblLuongCN> tblLuongCNs
		{
			get
			{
				return this._tblLuongCNs;
			}
			set
			{
				this._tblLuongCNs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCongXuong_tblCongNhan", Storage="_tblCongXuong", ThisKey="IDCX", OtherKey="IDCX", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tblCongXuong tblCongXuong
		{
			get
			{
				return this._tblCongXuong.Entity;
			}
			set
			{
				tblCongXuong previousValue = this._tblCongXuong.Entity;
				if (((previousValue != value) 
							|| (this._tblCongXuong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCongXuong.Entity = null;
						previousValue.tblCongNhans.Remove(this);
					}
					this._tblCongXuong.Entity = value;
					if ((value != null))
					{
						value.tblCongNhans.Add(this);
						this._IDCX = value.IDCX;
					}
					else
					{
						this._IDCX = default(string);
					}
					this.SendPropertyChanged("tblCongXuong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblLuongCNs(tblLuongCN entity)
		{
			this.SendPropertyChanging();
			entity.tblCongNhan = this;
		}
		
		private void detach_tblLuongCNs(tblLuongCN entity)
		{
			this.SendPropertyChanging();
			entity.tblCongNhan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCongXuong")]
	public partial class tblCongXuong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDCX;
		
		private string _TenCX;
		
		private string _IDSP;
		
		private EntitySet<tblCongNhan> _tblCongNhans;
		
		private EntityRef<tblSanPham> _tblSanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCXChanging(string value);
    partial void OnIDCXChanged();
    partial void OnTenCXChanging(string value);
    partial void OnTenCXChanged();
    partial void OnIDSPChanging(string value);
    partial void OnIDSPChanged();
    #endregion
		
		public tblCongXuong()
		{
			this._tblCongNhans = new EntitySet<tblCongNhan>(new Action<tblCongNhan>(this.attach_tblCongNhans), new Action<tblCongNhan>(this.detach_tblCongNhans));
			this._tblSanPham = default(EntityRef<tblSanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCX", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDCX
		{
			get
			{
				return this._IDCX;
			}
			set
			{
				if ((this._IDCX != value))
				{
					this.OnIDCXChanging(value);
					this.SendPropertyChanging();
					this._IDCX = value;
					this.SendPropertyChanged("IDCX");
					this.OnIDCXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenCX", DbType="NChar(30) NOT NULL", CanBeNull=false)]
		public string TenCX
		{
			get
			{
				return this._TenCX;
			}
			set
			{
				if ((this._TenCX != value))
				{
					this.OnTenCXChanging(value);
					this.SendPropertyChanging();
					this._TenCX = value;
					this.SendPropertyChanged("TenCX");
					this.OnTenCXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSP", DbType="NChar(5) NOT NULL", CanBeNull=false)]
		public string IDSP
		{
			get
			{
				return this._IDSP;
			}
			set
			{
				if ((this._IDSP != value))
				{
					if (this._tblSanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSPChanging(value);
					this.SendPropertyChanging();
					this._IDSP = value;
					this.SendPropertyChanged("IDSP");
					this.OnIDSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCongXuong_tblCongNhan", Storage="_tblCongNhans", ThisKey="IDCX", OtherKey="IDCX")]
		public EntitySet<tblCongNhan> tblCongNhans
		{
			get
			{
				return this._tblCongNhans;
			}
			set
			{
				this._tblCongNhans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblSanPham_tblCongXuong", Storage="_tblSanPham", ThisKey="IDSP", OtherKey="IDSP", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tblSanPham tblSanPham
		{
			get
			{
				return this._tblSanPham.Entity;
			}
			set
			{
				tblSanPham previousValue = this._tblSanPham.Entity;
				if (((previousValue != value) 
							|| (this._tblSanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblSanPham.Entity = null;
						previousValue.tblCongXuongs.Remove(this);
					}
					this._tblSanPham.Entity = value;
					if ((value != null))
					{
						value.tblCongXuongs.Add(this);
						this._IDSP = value.IDSP;
					}
					else
					{
						this._IDSP = default(string);
					}
					this.SendPropertyChanged("tblSanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblCongNhans(tblCongNhan entity)
		{
			this.SendPropertyChanging();
			entity.tblCongXuong = this;
		}
		
		private void detach_tblCongNhans(tblCongNhan entity)
		{
			this.SendPropertyChanging();
			entity.tblCongXuong = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblHopDong")]
	public partial class tblHopDong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDHD;
		
		private string _Ten;
		
		private System.DateTime _NgayBatDau;
		
		private System.DateTime _NgayKetThuc;
		
		private EntitySet<tblPhongBan> _tblPhongBans;
		
		private EntitySet<tblSanPham> _tblSanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDHDChanging(string value);
    partial void OnIDHDChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    partial void OnNgayBatDauChanging(System.DateTime value);
    partial void OnNgayBatDauChanged();
    partial void OnNgayKetThucChanging(System.DateTime value);
    partial void OnNgayKetThucChanged();
    #endregion
		
		public tblHopDong()
		{
			this._tblPhongBans = new EntitySet<tblPhongBan>(new Action<tblPhongBan>(this.attach_tblPhongBans), new Action<tblPhongBan>(this.detach_tblPhongBans));
			this._tblSanPhams = new EntitySet<tblSanPham>(new Action<tblSanPham>(this.attach_tblSanPhams), new Action<tblSanPham>(this.detach_tblSanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDHD", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDHD
		{
			get
			{
				return this._IDHD;
			}
			set
			{
				if ((this._IDHD != value))
				{
					this.OnIDHDChanging(value);
					this.SendPropertyChanging();
					this._IDHD = value;
					this.SendPropertyChanged("IDHD");
					this.OnIDHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBatDau", DbType="Date NOT NULL")]
		public System.DateTime NgayBatDau
		{
			get
			{
				return this._NgayBatDau;
			}
			set
			{
				if ((this._NgayBatDau != value))
				{
					this.OnNgayBatDauChanging(value);
					this.SendPropertyChanging();
					this._NgayBatDau = value;
					this.SendPropertyChanged("NgayBatDau");
					this.OnNgayBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKetThuc", DbType="Date NOT NULL")]
		public System.DateTime NgayKetThuc
		{
			get
			{
				return this._NgayKetThuc;
			}
			set
			{
				if ((this._NgayKetThuc != value))
				{
					this.OnNgayKetThucChanging(value);
					this.SendPropertyChanging();
					this._NgayKetThuc = value;
					this.SendPropertyChanged("NgayKetThuc");
					this.OnNgayKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblHopDong_tblPhongBan", Storage="_tblPhongBans", ThisKey="IDHD", OtherKey="IDHD")]
		public EntitySet<tblPhongBan> tblPhongBans
		{
			get
			{
				return this._tblPhongBans;
			}
			set
			{
				this._tblPhongBans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblHopDong_tblSanPham", Storage="_tblSanPhams", ThisKey="IDHD", OtherKey="IDHD")]
		public EntitySet<tblSanPham> tblSanPhams
		{
			get
			{
				return this._tblSanPhams;
			}
			set
			{
				this._tblSanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblPhongBans(tblPhongBan entity)
		{
			this.SendPropertyChanging();
			entity.tblHopDong = this;
		}
		
		private void detach_tblPhongBans(tblPhongBan entity)
		{
			this.SendPropertyChanging();
			entity.tblHopDong = null;
		}
		
		private void attach_tblSanPhams(tblSanPham entity)
		{
			this.SendPropertyChanging();
			entity.tblHopDong = this;
		}
		
		private void detach_tblSanPhams(tblSanPham entity)
		{
			this.SendPropertyChanging();
			entity.tblHopDong = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblNhanVienHanhChinh")]
	public partial class tblNhanVienHanhChinh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDNV;
		
		private string _HoTen;
		
		private string _GioiTinh;
		
		private System.DateTime _NgaySinh;
		
		private System.DateTime _NgayBatDau;
		
		private int _HeSoLuong;
		
		private int _PhuCap;
		
		private string _IDPB;
		
		private string _TrangThai;
		
		private string _ChucVu;
		
		private EntityRef<tblAccountNV> _tblAccountNV;
		
		private EntitySet<tblLuongNV> _tblLuongNVs;
		
		private EntityRef<tblPhongBan> _tblPhongBan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDNVChanging(string value);
    partial void OnIDNVChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnNgaySinhChanging(System.DateTime value);
    partial void OnNgaySinhChanged();
    partial void OnNgayBatDauChanging(System.DateTime value);
    partial void OnNgayBatDauChanged();
    partial void OnHeSoLuongChanging(int value);
    partial void OnHeSoLuongChanged();
    partial void OnPhuCapChanging(int value);
    partial void OnPhuCapChanged();
    partial void OnIDPBChanging(string value);
    partial void OnIDPBChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    partial void OnChucVuChanging(string value);
    partial void OnChucVuChanged();
    #endregion
		
		public tblNhanVienHanhChinh()
		{
			this._tblAccountNV = default(EntityRef<tblAccountNV>);
			this._tblLuongNVs = new EntitySet<tblLuongNV>(new Action<tblLuongNV>(this.attach_tblLuongNVs), new Action<tblLuongNV>(this.detach_tblLuongNVs));
			this._tblPhongBan = default(EntityRef<tblPhongBan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNV", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDNV
		{
			get
			{
				return this._IDNV;
			}
			set
			{
				if ((this._IDNV != value))
				{
					this.OnIDNVChanging(value);
					this.SendPropertyChanging();
					this._IDNV = value;
					this.SendPropertyChanged("IDNV");
					this.OnIDNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NChar(30) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NChar(3) NOT NULL", CanBeNull=false)]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date NOT NULL")]
		public System.DateTime NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBatDau", DbType="Date NOT NULL")]
		public System.DateTime NgayBatDau
		{
			get
			{
				return this._NgayBatDau;
			}
			set
			{
				if ((this._NgayBatDau != value))
				{
					this.OnNgayBatDauChanging(value);
					this.SendPropertyChanging();
					this._NgayBatDau = value;
					this.SendPropertyChanged("NgayBatDau");
					this.OnNgayBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeSoLuong", DbType="Int NOT NULL")]
		public int HeSoLuong
		{
			get
			{
				return this._HeSoLuong;
			}
			set
			{
				if ((this._HeSoLuong != value))
				{
					this.OnHeSoLuongChanging(value);
					this.SendPropertyChanging();
					this._HeSoLuong = value;
					this.SendPropertyChanged("HeSoLuong");
					this.OnHeSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhuCap", DbType="Int NOT NULL")]
		public int PhuCap
		{
			get
			{
				return this._PhuCap;
			}
			set
			{
				if ((this._PhuCap != value))
				{
					this.OnPhuCapChanging(value);
					this.SendPropertyChanging();
					this._PhuCap = value;
					this.SendPropertyChanged("PhuCap");
					this.OnPhuCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPB", DbType="NChar(5)")]
		public string IDPB
		{
			get
			{
				return this._IDPB;
			}
			set
			{
				if ((this._IDPB != value))
				{
					if (this._tblPhongBan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPBChanging(value);
					this.SendPropertyChanging();
					this._IDPB = value;
					this.SendPropertyChanged("IDPB");
					this.OnIDPBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NChar(20)")]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChucVu", DbType="NChar(20)")]
		public string ChucVu
		{
			get
			{
				return this._ChucVu;
			}
			set
			{
				if ((this._ChucVu != value))
				{
					this.OnChucVuChanging(value);
					this.SendPropertyChanging();
					this._ChucVu = value;
					this.SendPropertyChanged("ChucVu");
					this.OnChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblNhanVienHanhChinh_tblAccountNV", Storage="_tblAccountNV", ThisKey="IDNV", OtherKey="IDNV", IsUnique=true, IsForeignKey=false)]
		public tblAccountNV tblAccountNV
		{
			get
			{
				return this._tblAccountNV.Entity;
			}
			set
			{
				tblAccountNV previousValue = this._tblAccountNV.Entity;
				if (((previousValue != value) 
							|| (this._tblAccountNV.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblAccountNV.Entity = null;
						previousValue.tblNhanVienHanhChinh = null;
					}
					this._tblAccountNV.Entity = value;
					if ((value != null))
					{
						value.tblNhanVienHanhChinh = this;
					}
					this.SendPropertyChanged("tblAccountNV");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblNhanVienHanhChinh_tblLuongNV", Storage="_tblLuongNVs", ThisKey="IDNV", OtherKey="IDNV")]
		public EntitySet<tblLuongNV> tblLuongNVs
		{
			get
			{
				return this._tblLuongNVs;
			}
			set
			{
				this._tblLuongNVs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPhongBan_tblNhanVienHanhChinh", Storage="_tblPhongBan", ThisKey="IDPB", OtherKey="IDPB", IsForeignKey=true, DeleteRule="CASCADE")]
		public tblPhongBan tblPhongBan
		{
			get
			{
				return this._tblPhongBan.Entity;
			}
			set
			{
				tblPhongBan previousValue = this._tblPhongBan.Entity;
				if (((previousValue != value) 
							|| (this._tblPhongBan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblPhongBan.Entity = null;
						previousValue.tblNhanVienHanhChinhs.Remove(this);
					}
					this._tblPhongBan.Entity = value;
					if ((value != null))
					{
						value.tblNhanVienHanhChinhs.Add(this);
						this._IDPB = value.IDPB;
					}
					else
					{
						this._IDPB = default(string);
					}
					this.SendPropertyChanged("tblPhongBan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblLuongNVs(tblLuongNV entity)
		{
			this.SendPropertyChanging();
			entity.tblNhanVienHanhChinh = this;
		}
		
		private void detach_tblLuongNVs(tblLuongNV entity)
		{
			this.SendPropertyChanging();
			entity.tblNhanVienHanhChinh = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPhongBan")]
	public partial class tblPhongBan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDPB;
		
		private string _TenPB;
		
		private string _IDHD;
		
		private EntitySet<tblNhanVienHanhChinh> _tblNhanVienHanhChinhs;
		
		private EntityRef<tblHopDong> _tblHopDong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPBChanging(string value);
    partial void OnIDPBChanged();
    partial void OnTenPBChanging(string value);
    partial void OnTenPBChanged();
    partial void OnIDHDChanging(string value);
    partial void OnIDHDChanged();
    #endregion
		
		public tblPhongBan()
		{
			this._tblNhanVienHanhChinhs = new EntitySet<tblNhanVienHanhChinh>(new Action<tblNhanVienHanhChinh>(this.attach_tblNhanVienHanhChinhs), new Action<tblNhanVienHanhChinh>(this.detach_tblNhanVienHanhChinhs));
			this._tblHopDong = default(EntityRef<tblHopDong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPB", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDPB
		{
			get
			{
				return this._IDPB;
			}
			set
			{
				if ((this._IDPB != value))
				{
					this.OnIDPBChanging(value);
					this.SendPropertyChanging();
					this._IDPB = value;
					this.SendPropertyChanged("IDPB");
					this.OnIDPBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPB", DbType="NChar(30) NOT NULL", CanBeNull=false)]
		public string TenPB
		{
			get
			{
				return this._TenPB;
			}
			set
			{
				if ((this._TenPB != value))
				{
					this.OnTenPBChanging(value);
					this.SendPropertyChanging();
					this._TenPB = value;
					this.SendPropertyChanged("TenPB");
					this.OnTenPBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDHD", DbType="NChar(5) NOT NULL", CanBeNull=false)]
		public string IDHD
		{
			get
			{
				return this._IDHD;
			}
			set
			{
				if ((this._IDHD != value))
				{
					if (this._tblHopDong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDHDChanging(value);
					this.SendPropertyChanging();
					this._IDHD = value;
					this.SendPropertyChanged("IDHD");
					this.OnIDHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPhongBan_tblNhanVienHanhChinh", Storage="_tblNhanVienHanhChinhs", ThisKey="IDPB", OtherKey="IDPB")]
		public EntitySet<tblNhanVienHanhChinh> tblNhanVienHanhChinhs
		{
			get
			{
				return this._tblNhanVienHanhChinhs;
			}
			set
			{
				this._tblNhanVienHanhChinhs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblHopDong_tblPhongBan", Storage="_tblHopDong", ThisKey="IDHD", OtherKey="IDHD", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tblHopDong tblHopDong
		{
			get
			{
				return this._tblHopDong.Entity;
			}
			set
			{
				tblHopDong previousValue = this._tblHopDong.Entity;
				if (((previousValue != value) 
							|| (this._tblHopDong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblHopDong.Entity = null;
						previousValue.tblPhongBans.Remove(this);
					}
					this._tblHopDong.Entity = value;
					if ((value != null))
					{
						value.tblPhongBans.Add(this);
						this._IDHD = value.IDHD;
					}
					else
					{
						this._IDHD = default(string);
					}
					this.SendPropertyChanged("tblHopDong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblNhanVienHanhChinhs(tblNhanVienHanhChinh entity)
		{
			this.SendPropertyChanging();
			entity.tblPhongBan = this;
		}
		
		private void detach_tblNhanVienHanhChinhs(tblNhanVienHanhChinh entity)
		{
			this.SendPropertyChanging();
			entity.tblPhongBan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSanPham")]
	public partial class tblSanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDSP;
		
		private string _TenSanPham;
		
		private string _DonViTinh;
		
		private string _IDHD;
		
		private EntitySet<tblCongXuong> _tblCongXuongs;
		
		private EntityRef<tblHopDong> _tblHopDong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDSPChanging(string value);
    partial void OnIDSPChanged();
    partial void OnTenSanPhamChanging(string value);
    partial void OnTenSanPhamChanged();
    partial void OnDonViTinhChanging(string value);
    partial void OnDonViTinhChanged();
    partial void OnIDHDChanging(string value);
    partial void OnIDHDChanged();
    #endregion
		
		public tblSanPham()
		{
			this._tblCongXuongs = new EntitySet<tblCongXuong>(new Action<tblCongXuong>(this.attach_tblCongXuongs), new Action<tblCongXuong>(this.detach_tblCongXuongs));
			this._tblHopDong = default(EntityRef<tblHopDong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSP", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDSP
		{
			get
			{
				return this._IDSP;
			}
			set
			{
				if ((this._IDSP != value))
				{
					this.OnIDSPChanging(value);
					this.SendPropertyChanging();
					this._IDSP = value;
					this.SendPropertyChanged("IDSP");
					this.OnIDSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSanPham", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenSanPham
		{
			get
			{
				return this._TenSanPham;
			}
			set
			{
				if ((this._TenSanPham != value))
				{
					this.OnTenSanPhamChanging(value);
					this.SendPropertyChanging();
					this._TenSanPham = value;
					this.SendPropertyChanged("TenSanPham");
					this.OnTenSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonViTinh", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string DonViTinh
		{
			get
			{
				return this._DonViTinh;
			}
			set
			{
				if ((this._DonViTinh != value))
				{
					this.OnDonViTinhChanging(value);
					this.SendPropertyChanging();
					this._DonViTinh = value;
					this.SendPropertyChanged("DonViTinh");
					this.OnDonViTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDHD", DbType="NChar(5) NOT NULL", CanBeNull=false)]
		public string IDHD
		{
			get
			{
				return this._IDHD;
			}
			set
			{
				if ((this._IDHD != value))
				{
					if (this._tblHopDong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDHDChanging(value);
					this.SendPropertyChanging();
					this._IDHD = value;
					this.SendPropertyChanged("IDHD");
					this.OnIDHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblSanPham_tblCongXuong", Storage="_tblCongXuongs", ThisKey="IDSP", OtherKey="IDSP")]
		public EntitySet<tblCongXuong> tblCongXuongs
		{
			get
			{
				return this._tblCongXuongs;
			}
			set
			{
				this._tblCongXuongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblHopDong_tblSanPham", Storage="_tblHopDong", ThisKey="IDHD", OtherKey="IDHD", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tblHopDong tblHopDong
		{
			get
			{
				return this._tblHopDong.Entity;
			}
			set
			{
				tblHopDong previousValue = this._tblHopDong.Entity;
				if (((previousValue != value) 
							|| (this._tblHopDong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblHopDong.Entity = null;
						previousValue.tblSanPhams.Remove(this);
					}
					this._tblHopDong.Entity = value;
					if ((value != null))
					{
						value.tblSanPhams.Add(this);
						this._IDHD = value.IDHD;
					}
					else
					{
						this._IDHD = default(string);
					}
					this.SendPropertyChanged("tblHopDong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblCongXuongs(tblCongXuong entity)
		{
			this.SendPropertyChanging();
			entity.tblSanPham = this;
		}
		
		private void detach_tblCongXuongs(tblCongXuong entity)
		{
			this.SendPropertyChanging();
			entity.tblSanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblLuongNV")]
	public partial class tblLuongNV : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _STT;
		
		private string _IDNV;
		
		private string _ThangLam;
		
		private System.Nullable<int> _TangCaThuong;
		
		private System.Nullable<int> _TangCaNgayNghi;
		
		private System.Nullable<int> _TangCaNgayLe;
		
		private System.Nullable<int> _SoNgayLam;
		
		private EntityRef<tblNhanVienHanhChinh> _tblNhanVienHanhChinh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSTTChanging(string value);
    partial void OnSTTChanged();
    partial void OnIDNVChanging(string value);
    partial void OnIDNVChanged();
    partial void OnThangLamChanging(string value);
    partial void OnThangLamChanged();
    partial void OnTangCaThuongChanging(System.Nullable<int> value);
    partial void OnTangCaThuongChanged();
    partial void OnTangCaNgayNghiChanging(System.Nullable<int> value);
    partial void OnTangCaNgayNghiChanged();
    partial void OnTangCaNgayLeChanging(System.Nullable<int> value);
    partial void OnTangCaNgayLeChanged();
    partial void OnSoNgayLamChanging(System.Nullable<int> value);
    partial void OnSoNgayLamChanged();
    #endregion
		
		public tblLuongNV()
		{
			this._tblNhanVienHanhChinh = default(EntityRef<tblNhanVienHanhChinh>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STT", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string STT
		{
			get
			{
				return this._STT;
			}
			set
			{
				if ((this._STT != value))
				{
					this.OnSTTChanging(value);
					this.SendPropertyChanging();
					this._STT = value;
					this.SendPropertyChanged("STT");
					this.OnSTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNV", DbType="NChar(5) NOT NULL", CanBeNull=false)]
		public string IDNV
		{
			get
			{
				return this._IDNV;
			}
			set
			{
				if ((this._IDNV != value))
				{
					if (this._tblNhanVienHanhChinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDNVChanging(value);
					this.SendPropertyChanging();
					this._IDNV = value;
					this.SendPropertyChanged("IDNV");
					this.OnIDNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThangLam", DbType="NChar(7) NOT NULL", CanBeNull=false)]
		public string ThangLam
		{
			get
			{
				return this._ThangLam;
			}
			set
			{
				if ((this._ThangLam != value))
				{
					this.OnThangLamChanging(value);
					this.SendPropertyChanging();
					this._ThangLam = value;
					this.SendPropertyChanged("ThangLam");
					this.OnThangLamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TangCaThuong", DbType="Int")]
		public System.Nullable<int> TangCaThuong
		{
			get
			{
				return this._TangCaThuong;
			}
			set
			{
				if ((this._TangCaThuong != value))
				{
					this.OnTangCaThuongChanging(value);
					this.SendPropertyChanging();
					this._TangCaThuong = value;
					this.SendPropertyChanged("TangCaThuong");
					this.OnTangCaThuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TangCaNgayNghi", DbType="Int")]
		public System.Nullable<int> TangCaNgayNghi
		{
			get
			{
				return this._TangCaNgayNghi;
			}
			set
			{
				if ((this._TangCaNgayNghi != value))
				{
					this.OnTangCaNgayNghiChanging(value);
					this.SendPropertyChanging();
					this._TangCaNgayNghi = value;
					this.SendPropertyChanged("TangCaNgayNghi");
					this.OnTangCaNgayNghiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TangCaNgayLe", DbType="Int")]
		public System.Nullable<int> TangCaNgayLe
		{
			get
			{
				return this._TangCaNgayLe;
			}
			set
			{
				if ((this._TangCaNgayLe != value))
				{
					this.OnTangCaNgayLeChanging(value);
					this.SendPropertyChanging();
					this._TangCaNgayLe = value;
					this.SendPropertyChanged("TangCaNgayLe");
					this.OnTangCaNgayLeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoNgayLam", DbType="Int")]
		public System.Nullable<int> SoNgayLam
		{
			get
			{
				return this._SoNgayLam;
			}
			set
			{
				if ((this._SoNgayLam != value))
				{
					this.OnSoNgayLamChanging(value);
					this.SendPropertyChanging();
					this._SoNgayLam = value;
					this.SendPropertyChanged("SoNgayLam");
					this.OnSoNgayLamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblNhanVienHanhChinh_tblLuongNV", Storage="_tblNhanVienHanhChinh", ThisKey="IDNV", OtherKey="IDNV", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tblNhanVienHanhChinh tblNhanVienHanhChinh
		{
			get
			{
				return this._tblNhanVienHanhChinh.Entity;
			}
			set
			{
				tblNhanVienHanhChinh previousValue = this._tblNhanVienHanhChinh.Entity;
				if (((previousValue != value) 
							|| (this._tblNhanVienHanhChinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblNhanVienHanhChinh.Entity = null;
						previousValue.tblLuongNVs.Remove(this);
					}
					this._tblNhanVienHanhChinh.Entity = value;
					if ((value != null))
					{
						value.tblLuongNVs.Add(this);
						this._IDNV = value.IDNV;
					}
					else
					{
						this._IDNV = default(string);
					}
					this.SendPropertyChanged("tblNhanVienHanhChinh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblLuongCN")]
	public partial class tblLuongCN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _STT;
		
		private string _IDCN;
		
		private string _IDCD;
		
		private System.Nullable<int> _SoLuong;
		
		private string _Ca;
		
		private System.Nullable<System.DateTime> _NgayLam;
		
		private EntityRef<tblCongDoan> _tblCongDoan;
		
		private EntityRef<tblCongNhan> _tblCongNhan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSTTChanging(string value);
    partial void OnSTTChanged();
    partial void OnIDCNChanging(string value);
    partial void OnIDCNChanged();
    partial void OnIDCDChanging(string value);
    partial void OnIDCDChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnCaChanging(string value);
    partial void OnCaChanged();
    partial void OnNgayLamChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayLamChanged();
    #endregion
		
		public tblLuongCN()
		{
			this._tblCongDoan = default(EntityRef<tblCongDoan>);
			this._tblCongNhan = default(EntityRef<tblCongNhan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STT", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string STT
		{
			get
			{
				return this._STT;
			}
			set
			{
				if ((this._STT != value))
				{
					this.OnSTTChanging(value);
					this.SendPropertyChanging();
					this._STT = value;
					this.SendPropertyChanged("STT");
					this.OnSTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCN", DbType="NChar(5) NOT NULL", CanBeNull=false)]
		public string IDCN
		{
			get
			{
				return this._IDCN;
			}
			set
			{
				if ((this._IDCN != value))
				{
					if (this._tblCongNhan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCNChanging(value);
					this.SendPropertyChanging();
					this._IDCN = value;
					this.SendPropertyChanged("IDCN");
					this.OnIDCNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCD", DbType="NChar(5)")]
		public string IDCD
		{
			get
			{
				return this._IDCD;
			}
			set
			{
				if ((this._IDCD != value))
				{
					if (this._tblCongDoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCDChanging(value);
					this.SendPropertyChanging();
					this._IDCD = value;
					this.SendPropertyChanged("IDCD");
					this.OnIDCDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ca", DbType="NChar(2)")]
		public string Ca
		{
			get
			{
				return this._Ca;
			}
			set
			{
				if ((this._Ca != value))
				{
					this.OnCaChanging(value);
					this.SendPropertyChanging();
					this._Ca = value;
					this.SendPropertyChanged("Ca");
					this.OnCaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLam", DbType="Date")]
		public System.Nullable<System.DateTime> NgayLam
		{
			get
			{
				return this._NgayLam;
			}
			set
			{
				if ((this._NgayLam != value))
				{
					this.OnNgayLamChanging(value);
					this.SendPropertyChanging();
					this._NgayLam = value;
					this.SendPropertyChanged("NgayLam");
					this.OnNgayLamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCongDoan_tblLuongCN", Storage="_tblCongDoan", ThisKey="IDCD", OtherKey="IDCD", IsForeignKey=true, DeleteRule="CASCADE")]
		public tblCongDoan tblCongDoan
		{
			get
			{
				return this._tblCongDoan.Entity;
			}
			set
			{
				tblCongDoan previousValue = this._tblCongDoan.Entity;
				if (((previousValue != value) 
							|| (this._tblCongDoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCongDoan.Entity = null;
						previousValue.tblLuongCNs.Remove(this);
					}
					this._tblCongDoan.Entity = value;
					if ((value != null))
					{
						value.tblLuongCNs.Add(this);
						this._IDCD = value.IDCD;
					}
					else
					{
						this._IDCD = default(string);
					}
					this.SendPropertyChanged("tblCongDoan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCongNhan_tblLuongCN", Storage="_tblCongNhan", ThisKey="IDCN", OtherKey="IDCN", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tblCongNhan tblCongNhan
		{
			get
			{
				return this._tblCongNhan.Entity;
			}
			set
			{
				tblCongNhan previousValue = this._tblCongNhan.Entity;
				if (((previousValue != value) 
							|| (this._tblCongNhan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCongNhan.Entity = null;
						previousValue.tblLuongCNs.Remove(this);
					}
					this._tblCongNhan.Entity = value;
					if ((value != null))
					{
						value.tblLuongCNs.Add(this);
						this._IDCN = value.IDCN;
					}
					else
					{
						this._IDCN = default(string);
					}
					this.SendPropertyChanged("tblCongNhan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
